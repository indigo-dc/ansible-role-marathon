- name: Ensure local certs directory exists
  file: state=directory path={{ trust_anchor_root_dir }}

- name: Install rootCA certificate
  copy: src=rootCA.crt dest={{ trust_anchor_root_dir }}/rootCA.crt
  notify:
    - update root trust anchor

# Force handler flush so that the rootCA is immediately taken into account
- meta: flush_handlers

- name: Copy root CA key and crt
  copy: src={{item}} dest=/tmp/{{item}}
  with_items:
   - rootCA.crt
   - rootCA.key

- name: create ssl signed key
  command: openssl genrsa -des3 -out marathon.key -passout "env:MARATHON_KEY_PASSWORD"
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"

- name: generate a CSR
  command: openssl req -new -key marathon.key -passin "env:MARATHON_KEY_PASSWORD" -subj "/C={{ openssl_self_signed.country }}/ST={{ openssl_self_signed.state }}/L={{ openssl_self_signed.city }}/O={{ openssl_self_signed.organization }}/OU={{ openssl_self_signed.unit }}/CN={{ openssl_self_signed.name }}/emailAddress={{ openssl_self_signed.email }}/" -out marathon.csr
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"

- name: generate and sign cert
  command: openssl x509 -req -in marathon.csr -passin "env:MARATHON_KEY_PASSWORD" -CA /tmp/rootCA.crt -CAkey /tmp/rootCA.key -CAcreateserial -out marathon.pem -days 3650
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"

- name: extract pcks12
  command: openssl pkcs12 -inkey marathon.key -passin "env:MARATHON_KEY_PASSWORD" -name marathon -in marathon.pem -password "env:MARATHON_PKCS_PASSWORD" -export -out marathon.pkcs12
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"
    MARATHON_PKCS_PASSWORD: "{{ pkcs_password }}"

- name: create keystore dir
  file: path="{{ marathon_keystore_path | dirname }}" state=directory

- name: generate keystore
  command: keytool -importkeystore -noprompt -srckeystore marathon.pkcs12 -srcalias marathon -srcstorepass $MARATHON_PKCS_PASSWORD -srcstoretype PKCS12 -destkeystore "{{ marathon_keystore_path}}" -deststorepass $MARATHON_JKS_PASSWORD
  environment: 
    MARATHON_PKCS_PASSWORD: "{{ pkcs_password }}"
    MARATHON_JKS_PASSWORD: "{{ jks_password }}"
